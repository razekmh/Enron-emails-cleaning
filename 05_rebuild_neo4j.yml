- name: build database and import data
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
  hosts: all
  tasks: 
  - name: delete anchor folder
    file:
      state: absent
      path: "{{ item }}"
    loop:
      - /opt/neo4j_anchor

  - name: Stop running container
    docker_container:
      name: "{{ item }}"
      state: absent
    loop:
      - databases_neo4j_1 

  - name: create database directories
    become: yes
    file:
      path: "{{ item }}"
      state: directory
    loop:
      - /opt/neo4j_anchor/conf_init
      - /opt/neo4j_anchor/data
      - /opt/neo4j_anchor/plugins

  - name: Copy scripts
    become: yes
    copy: src={{ item.src }} dest={{ item.dest }} remote_src={{ item.remote }}
    with_items:
      - { src: '/opt/Enron-emails-cleaning/utils/neo4j_init.sh', dest: '/opt/neo4j_anchor/conf_init/neo4j_init.sh', remote: 'no' }
      - { src: '/opt/Enron-emails-cleaning/utils/neo4j_load_data.py', dest: '/opt/neo4j_anchor/neo4j_load_data.py', remote: 'no' }
  
  - name: Download Graph DS
    become: yes
    get_url:
      url: https://github.com/neo4j/graph-data-science/releases/download/1.1.7/neo4j-graph-data-science-1.1.7-standalone.jar
      dest: /opt/neo4j_anchor/plugins/neo4j-graph-data-science-1.1.7-standalone.jar
      mode: '0444'

  - name: Build neo4j server
    register: docker_container_output
    community.docker.docker_compose:
      project_name: databases
      definition:
        version: '3.3'
        services:
          neo4j:
            image: neo4j:3.5
            restart: always
            ports:
              - 7474:7474
              - 7687:7687
            volumes:
              - /opt/neo4j_anchor/conf_init:/conf
              - /opt/enron_processed/enron_neo4j:/import
              - /opt/neo4j_anchor/data:/data
              - /opt/neo4j_anchor/logs:/logs
              - /opt/neo4j_anchor/plugins:/plugins
            environment: 
              - NEO4J_AUTH=neo4j/{{ NEO4JPASS }}
              #- NEO4J_dbms.security.auth_enabled=false
              #- NEO4J_AUTH=neo4j/simplepassword
              #- NEO4J_dbms.default_database=enron
              - NEO4J_dbms_memory_pagecache_size=4G
              #- NEO4J_dbms_memory_heap_initial_size=4G
              #- NEO4J_dbms_memory_heap_max_size=4G  
              - NEO4J_dbms_security_procedures_unrestricted=gds.*
              - NEO4j_dbms_security_procedures_whitelist=gds.* 

  - name: make script executable neo4j
    become: yes
    community.docker.docker_container_exec:
      container: databases_neo4j_1
      command: /bin/sh -c "chmod +x /var/lib/neo4j/conf/neo4j_init.sh"
  
  - name: change ownership of data folder to neo4j
    become: yes
    community.docker.docker_container_exec:
      container: databases_neo4j_1
      command: /bin/sh -c "chown -R neo4j:neo4j /data"

  - name: change ownership of neo4j folder contents to neo4j
    become: yes
    community.docker.docker_container_exec:
      container: databases_neo4j_1
      command: /bin/sh -c "chown -R neo4j:neo4j /var/lib/neo4j"

  - name: import data to neo4j
    become: yes
    community.docker.docker_container_exec:
      container: databases_neo4j_1
      command: /bin/sh -c "/var/lib/neo4j/conf/neo4j_init.sh -u neo4j -p {{ NEO4JPASS }} "
    register: neo4j_script_output
 
  - name: import rel to neo4j
    become: yes
    command: python3 /opt/neo4j_anchor/neo4j_load_data.py -u neo4j -p {{ NEO4JPASS }} -i {{ ansible_ssh_host }}

