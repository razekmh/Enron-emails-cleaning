- name: Create neo4j directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ project_folder }}/neo4j_anchor/conf_init"
    - "{{ project_folder }}/neo4j_anchor/data"

- name: Copy data and secipts
  become:  yes
  copy: src={{ item.src }} dest={{ item.dest }} remote_src={{ item.remote }}
  with_items:
    - { src: "{{ project_folder }}/Enron-emails-cleaning/utils/neo4j_init.sh", dest: '{{ project_folder }}/neo4j_anchor/conf_init/neo4j_init.sh', remote: 'no' }
    - { src: "{{ project_folder }}/Enron-emails-cleaning/utils/neo4j_load_data.py", dest: '{{ project_folder }}/neo4j_anchor/neo4j_load_data.py', remote: 'no' }


- name: build database servers
  register: docker_container_output
  community.docker.docker_compose:
    project_name: databases
    definition:
      version: '3.3'
      services:
        neo4j:
          image: neo4j:3.5
          restart: always
          ports:
            - 7474:7474
            - 7687:7687
          volumes:
            - "{{ project_folder }}/neo4j_anchor/conf_init:/conf"
            - "{{ project_folder }}/enron_processed/enron_neo4j:/import"
            - "{{ project_folder }}/neo4j_anchor/data:/data"
            - "{{ project_folder }}/neo4j_anchor/logs:/logs"
            - "{{ project_folder }}/neo4j_anchor/plugins:/plugins"
          environment: 
            - NEO4J_AUTH=neo4j/{{ NEO4JPASS }}
            #- NEO4J_dbms.security.auth_enabled=false
            #- NEO4J_AUTH=neo4j/simplepassword
            #- NEO4J_dbms.default_database=enron
            - NEO4J_dbms_memory_pagecache_size=4G
            - NEO4J_dbms.memory.heap.initial_size=4G
            - NEO4J_dbms_memory_heap_max__size=4G   
            
#- name: Pause play until a elasticsearch is reachable
#  uri:
#    url: "http://127.0.0.1:9200"
#    follow_redirects: none
#    method: GET
#  register: _result
#  until: _result.status == 200
#  retries: 720 # 720 * 5 seconds = 1hour (60*60/5)
#  delay: 5 # Every 5 seconds

- name: make script executable neo4j
  become: yes
  community.docker.docker_container_exec:
    container: databases_neo4j_1
    command: /bin/sh -c "chmod +x /var/lib/neo4j/conf/neo4j_init.sh"

- name: import data to neo4j
  become: yes
  community.docker.docker_container_exec:
    container: databases_neo4j_1
    command: /bin/sh -c "/var/lib/neo4j/conf/neo4j_init.sh -u neo4j -p {{ NEO4JPASS }} "
  register: neo4j_script_output

- name: import rel to neo4j
  become: yes
  command: python3 "{{ project_folder }}/neo4j_anchor/neo4j_load_data.py" -u neo4j -p {{ NEO4JPASS }} -i {{ ansible_ssh_host }}

