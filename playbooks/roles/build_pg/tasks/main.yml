tasks: 
- name: Create pg directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /opt/postgresql_anchor
    - /opt/postgresql_scripts

- name: copy data and secipts
  become: yes
  copy: src={{ item.src }} dest={{ item.dest }} remote_src={{ item.remote }}
  with_items:
    - { src: '/opt/Enron-emails-cleaning/utils/postgresql_init.sh', dest: '/opt/postgresql_anchor/01-init.sh', remote: 'no' }
    - { src: '/opt/Enron-emails-cleaning/utils/postgresql_init_DDL.sql', dest: '/opt/postgresql_scripts/02-init-DDL.sql', remote: 'no' }
    - { src: '/opt/Enron-emails-cleaning/utils/postgresql_init_DML.sql', dest: '/opt/postgresql_scripts/02-init-DML.sql', remote: 'no' }
    - { src: '/opt/Enron-emails-cleaning/utils/postgresql_init_DCL.sql', dest: '/opt/postgresql_scripts/02-init-DCL.sql', remote: 'no' }
    - { src: '/opt/enron_processed/enron_postgresql/emails.csv', dest: '/opt/postgresql_anchor/emails.csv', remote: 'yes' }    
    - { src: '/opt/enron_processed/enron_postgresql/unique_users_with_names.csv', dest: '/opt/postgresql_anchor/unique_users_with_names.csv', remote: 'yes' }  
    - { src: '/opt/enron_processed/enron_postgresql/unique_email_users.csv', dest: '/opt/postgresql_anchor/unique_email_users.csv', remote: 'yes' } 

- name: Build pg servers
  register: docker_container_output
  community.docker.docker_compose:
    project_name: databases
    definition:
      version: '3.3'
      services:
        pg_container:
          image: postgres:15.3-bullseye
          restart: always
          environment:
            POSTGRES_USER: "{{ POSTGRES_USER }}"
            POSTGRES_PASSWORD: "{{ POSTGRES_PASSWORD }}"
           #POSTGRES_DB: "{{ POSTGRES_DB }}"
            APP_DB_USER: "{{ APP_DB_USER }}"
            APP_DB_PASS: "{{ APP_DB_PASS }}"
            APP_DB_NAME: "{{ APP_DB_NAME }}"
            PG_VIEWER_USER: "{{ PG_VIEWER_USER }}"
            PG_VIEWER_PASS: "{{ PG_VIEWER_PASS }}"
          ports:
            - "5432:5432"
          volumes:
            - /opt/postgresql_anchor:/docker-entrypoint-initdb.d/
            - /opt/postgresql_scripts:/opt/    
        pgadmin4_container:
          image: dpage/pgadmin4
          restart: always
          environment:
            PGADMIN_DEFAULT_EMAIL: "{{ PGADMIN_EMAIL  }}"
            PGADMIN_DEFAULT_PASSWORD: "{{ PGADMIN_PASS  }}"
          ports: 
            - "5050:80"


#- name: Pause play until a elasticsearch is reachable
#  uri:
#    url: "http://127.0.0.1:9200"
#    follow_redirects: none
#    method: GET
#  register: _result
#  until: _result.status == 200
#  retries: 720 # 720 * 5 seconds = 1hour (60*60/5)
#  delay: 5 # Every 5 seconds

- name: Build postgresql database structure
  become: yes
  community.docker.docker_container_exec:
    container: databases_pg_container_1
    command: bin/bash -c "psql -U {{ APP_DB_USER }} -d {{ APP_DB_NAME }} -a -f /opt/02-init-DDL.sql"
  register: postgresql_script_output

- name: Import data to postgresql
  become: yes
  community.docker.docker_container_exec:
    container: databases_pg_container_1
    command: bin/bash -c "psql -U {{ APP_DB_USER }} -d {{ APP_DB_NAME }} -a -f /opt/02-init-DML.sql"
  register: postgresql_script_output

- name: Add permissions to postgresql user
  become: yes
  community.docker.docker_container_exec:
    container: databases_pg_container_1
    command: bin/bash -c "psql -U {{ APP_DB_USER }} -d {{ APP_DB_NAME }} -a -f /opt/02-init-DCL.sql"
  register: postgresql_script_output
